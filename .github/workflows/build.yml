name: Rust Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y pkg-config libssl-dev

    - name: Build
      run: cargo build --release

    - name: Upload Release Binary
      uses: actions/upload-artifact@v3
      with:
        name: rust-binary
        path: target/release/tmux-resurrect-fix

  create_tag:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Git user
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'

    - name: Get the current version
      id: vars
      run: |
        echo "::set-output name=version::$(cargo pkgid | cut -d# -f2 | cut -d: -f2)"

    - name: Create Tag
      id: create_tag
      run: |
        git tag -a v${{ steps.vars.outputs.version }} -m "Release version ${{ steps.vars.outputs.version }}"
        git push origin v${{ steps.vars.outputs.version }}

  release:
    needs: create_tag
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download Build Artifact
      uses: actions/download-artifact@v3
      with:
        name: rust-binary
        path: ./bin

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ needs.create_tag.outputs.version }}
        files: ./bin/tmux-resurrect-fix
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
